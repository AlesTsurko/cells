{"backend_name": "TidalCycles", "setup_code": ":set -XOverloadedStrings\n:set prompt \"\"\n:set prompt-cont \"\"\n:set +m\n\nimport Sound.Tidal.Context\n\n-- total latency = oLatency + cFrameTimespan\ntidal <- startTidal (superdirtTarget {oLatency = 0.1, oAddress = \"127.0.0.1\", oPort = 57120}) (defaultConfig {cFrameTimespan = 1/20})\n\nlet p = streamReplace tidal\n    hush = streamHush tidal\n    list = streamList tidal\n    mute = streamMute tidal\n    unmute = streamUnmute tidal\n    solo = streamSolo tidal\n    unsolo = streamUnsolo tidal\n    once = streamOnce tidal\n    first = streamFirst tidal\n    asap = once\n    nudgeAll = streamNudgeAll tidal\n    all = streamAll tidal\n    resetCycles = streamResetCycles tidal\n    setcps = asap . cps\n    xfade i = transition tidal True (Sound.Tidal.Transition.xfadeIn 4) i\n    xfadeIn i t = transition tidal True (Sound.Tidal.Transition.xfadeIn t) i\n    histpan i t = transition tidal True (Sound.Tidal.Transition.histpan t) i\n    wait i t = transition tidal True (Sound.Tidal.Transition.wait t) i\n    waitT i f t = transition tidal True (Sound.Tidal.Transition.waitT f t) i\n    jump i = transition tidal True (Sound.Tidal.Transition.jump) i\n    jumpIn i t = transition tidal True (Sound.Tidal.Transition.jumpIn t) i\n    jumpIn' i t = transition tidal True (Sound.Tidal.Transition.jumpIn' t) i\n    jumpMod i t = transition tidal True (Sound.Tidal.Transition.jumpMod t) i\n    mortal i lifespan release = transition tidal True (Sound.Tidal.Transition.mortal lifespan release) i\n    interpolate i = transition tidal True (Sound.Tidal.Transition.interpolate) i\n    interpolateIn i t = transition tidal True (Sound.Tidal.Transition.interpolateIn t) i\n    clutch i = transition tidal True (Sound.Tidal.Transition.clutch) i\n    clutchIn i t = transition tidal True (Sound.Tidal.Transition.clutchIn t) i\n    anticipate i = transition tidal True (Sound.Tidal.Transition.anticipate) i\n    anticipateIn i t = transition tidal True (Sound.Tidal.Transition.anticipateIn t) i\n    forId i t = transition tidal False (Sound.Tidal.Transition.mortalOverlay t) i\n    d1 = p 1 . (|< orbit 0) \n    d2 = p 2 . (|< orbit 1) \n    d3 = p 3 . (|< orbit 2) \n    d4 = p 4 . (|< orbit 3) \n    d5 = p 5 . (|< orbit 4) \n    d6 = p 6 . (|< orbit 5) \n    d7 = p 7 . (|< orbit 6) \n    d8 = p 8 . (|< orbit 7) \n    d9 = p 9 . (|< orbit 8)\n    d10 = p 10 . (|< orbit 9)\n    d11 = p 11 . (|< orbit 10)\n    d12 = p 12 . (|< orbit 11)\n    d13 = p 13\n    d14 = p 14\n    d15 = p 15\n    d16 = p 16\n\nlet setI = streamSetI tidal\n    setF = streamSetF tidal\n    setS = streamSetS tidal\n    setR = streamSetI tidal\n    setB = streamSetB tidal", "run_command": "ghci", "command_prompt": "", "description": "TidalCycles track template.", "editor_mode": "haskell", "path": "/Users/alestsurko/Desktop/cells/track_templates/15738269360-597b25d4-d363-4ff0-8c5c-e357150f2546.ctt", "backend_middleware": {"input": {"regex": ".\\Z", "substitution": "\\g<0>\\n"}, "output": {"regex": "Prelude> |Prelude\\| ", "substitution": ""}}}